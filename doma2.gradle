compileJava {
  options.compilerArgs = ['-Adoma.dao.subpackage=impl', '-Adoma.dao.suffix=Impl']
}

def entityPackage = 'com.github.mtzw.app.entity'
def daoPackage = 'com.github.mtzw.app.dao'
def configClassName = 'boilerplate.AppConfig'

def db_url = 'jdbc:h2:file:./demo'
def db_user = 'sa'
def db_password = ''

task gen << {
  ant.taskdef(resource: 'domagentask.properties',
    classpath: configurations.domaGenRuntime.asPath)
  ant.gen(url: db_url, user: db_user, password: db_password) {
    entityConfig(
      packageName: entityPackage
    )
    daoConfig(
      packageName: daoPackage, configClassName: configClassName
    )
    sqlConfig()
  }
}

task genTestCases << {
  ant.taskdef(resource: 'domagentask.properties',
    classpath: configurations.domaGenRuntime.asPath)
  ant.gen(url: db_url, user: db_user, password: db_password) {
    sqlTestCaseConfig {
      fileset(dir: 'src/main/resources') {
        include(name: 'META-INF/**/*.sql')
      }
    }
  }
}

ext { aptDir='.apt_generated' }

eclipse {
  jdt.file.withProperties { it['org.eclipse.jdt.core.compiler.processAnnotations'] = 'enabled' }
}

eclipseJdt {
  def clos = []

  def fp = file('.factorypath')
  outputs.file fp
  clos += {
    fp.withWriter {
      def domaJar = configurations.compile.find {
        it.name.startsWith('doma-2')
      }
      new groovy.xml.MarkupBuilder(it).factorypath() {
        factorypathentry(kind:'EXTJAR', id:domaJar, enabled:true, runInBatchMode:false)
      }
    }
  }

  def prefs = { name, contents ->
    def f = file(".settings/$name")
    clos += {
      f.text = contents.stripMargin()
    }
    outputs.file f
  }

  prefs 'org.eclipse.jdt.apt.core.prefs', """\
    |eclipse.preferences.version=1
    |org.eclipse.jdt.apt.aptEnabled=true
    |org.eclipse.jdt.apt.genSrcDir=${aptDir}
    |org.eclipse.jdt.apt.processorOptions/doma.dao.subpackage=impl
    |org.eclipse.jdt.apt.processorOptions/doma.dao.suffix=Impl
    |org.eclipse.jdt.apt.reconcileEnabled=true
    |"""

  doLast { clos*.run() }
}
